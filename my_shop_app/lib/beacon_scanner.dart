import 'package:flutter_blue_plus/flutter_blue_plus.dart';
import 'notification_service.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:shared_preferences/shared_preferences.dart';
import 'dart:async';

bool isLoggedIn = false;
StreamSubscription<List<ScanResult>>? scanSubscription;

void startBeaconScan() async {
  final prefs = await SharedPreferences.getInstance();
  final isLoggedIn = prefs.getBool('isLoggedIn') ?? false;

  if (!isLoggedIn) {
    print("‚ö†Ô∏è ’ï’£’ø’°’ø’•÷Ä’® ’¥’∏÷Ç’ø÷Ñ ’π’´ ’£’∏÷Ä’Æ’•’¨‚Ä§ Beacon ’Ω’Ø’°’∂ ’π’´ ’°÷Ä’æ’∏÷Ç’¥");
    return;
  }

  if (FlutterBluePlus.isScanningNow) {
    print("‚è±Ô∏è ’ç’Ø’°’∂’°’æ’∏÷Ä’∏÷Ç’¥’® ’°÷Ä’§’•’∂ ’°’Ø’ø’´’æ ’ß, ’∂’∏÷Ä ’Ω’Ø’°’∂ ’π’´ ’Ω’Ø’Ω’æ’∏÷Ç’¥");
    return;
  }

  print("‚úÖ ’ç’Ø’Ω’∏÷Ç’¥ ’•’∂÷Ñ BLE ’Ω’Ø’°’∂’°’æ’∏÷Ä’∏÷Ç’¥’®...");

  await scanSubscription?.cancel();
  await FlutterBluePlus.startScan(timeout: const Duration(seconds: 1));
  print("üîç ’ç’Ø’°’∂’°’æ’∏÷Ä’∏÷Ç’¥’® ’°’Ø’ø’´’æ ’ß÷â");

  scanSubscription = FlutterBluePlus.scanResults.listen((results) {
    print("üì∂ ’ç’ø’°÷Å’æ’•÷Å ${results.length} BLE ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ÷â");

    bool beaconFound = false;
    for (ScanResult r in results) {
      var data = r.advertisementData.manufacturerData;
      final name = r.device.name.isNotEmpty ? r.device.name : "Unnamed";
      print("üì° ’ç’°÷Ä÷Ñ’ù $name (${r.device.id})");

      if (data.isEmpty) {
        print("‚ö†Ô∏è manufacturerData ’§’°’ø’°÷Ä’Ø ’ß");
        continue;
      }

      for (var entry in data.entries) {
        final bytes = entry.value;
        final hexString = bytes.map((b) => b.toRadixString(16).padLeft(2, '0')).join(' ');

        print("üì¶ Manufacturer Data (hex): $hexString");

        if (hexString == "d1 a9 53 39 5d bf 47 82 95 ef 12 5b 0b 9b a5 fa c5") {
          print("üö® ’Ä’°’µ’ø’∂’°’¢’•÷Ä’æ’•÷Å Beacon’ù ’®’Ω’ø manufacturerData");
          beaconFound = true;
          fetchProductsAndNotify();
        }
      }
    }

    if (!beaconFound) {
      print("‚ö†Ô∏è Beacon ’π’∞’°’µ’ø’∂’°’¢’•÷Ä’æ’•÷Å÷â");
    }

    Future.delayed(Duration(minutes: 1), startBeaconScan);
  });
}


void fetchProductsAndNotify() async {
  print("üåê ’à÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’∞’°÷Ä÷Å’∏÷Ç’¥ backend-’´’∂...");

  final prefs = await SharedPreferences.getInstance();
  final userId = prefs.getInt('user_id');

  if (userId == null) {
    print("‚ùóÔ∏è ’ï’£’ø’°’ø’´÷Ä’∏’ª ID ’π’Ø’°, ’∞’∂’°÷Ä’°’æ’∏÷Ä ’ß ’¥’∏÷Ç’ø÷Ñ ’π’´ ’£’∏÷Ä’Æ’•’¨÷â");
    return;
  }

  try {
    final response = await http.get(
      Uri.parse('http://192.168.1.39:8080/store_api/check_discounts.php?user_id=$userId'),
    );

    print("üîÅ Backend ’∫’°’ø’°’Ω’≠’°’∂’´ ’Ø’∏’§’®’ù ${response.statusCode}");

    if (response.statusCode == 200) {
      final data = jsonDecode(response.body);
      final List<dynamic> products = data['products'];

      print("‚úÖ ’ç’ø’°÷Å’æ’•÷Å ${products.length} ’°’∫÷Ä’°’∂÷Ñ:");

      for (var product in products) {
        final title = product['name'];
        final discount = product['Discount'];
        print("üì£ ’à÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’∂’∏’©’´÷Ü’´’Ø’°÷Å’´’°’ù $title - ‘∂’•’≤’π’ù $discount%");
        sendNotification(title, discount);
      }
    } else {
      print("‚ùå ’ç’≠’°’¨ HTTP ’Ø’∏’§’ù ${response.statusCode}");
    }
  } catch (e) {
    print("‚ùóÔ∏è ’ç’≠’°’¨’ù $e");
  }
}

void login() {
  isLoggedIn = true;
  print("üîì ’ï’£’ø’°’ø’´÷Ä÷Ñ’® ’¥’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•÷Å÷â ’ç’Ø’Ω’∏÷Ç’¥ ’•’∂÷Ñ ’Ω’Ø’°’∂’°’æ’∏÷Ä’∏÷Ç’¥’®...");
  startBeaconScan();
}

void logout() {
  isLoggedIn = false;
  print("üîí ’ï’£’ø’°’ø’´÷Ä÷Ñ’® ’§’∏÷Ç÷Ä’Ω ’•’Ø’°’æ÷â ‘¥’°’§’°÷Ä’•÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’Ω’Ø’°’∂’°’æ’∏÷Ä’∏÷Ç’¥’®...");
  FlutterBluePlus.stopScan();
  scanSubscription?.cancel();
}